# Generated by Django 5.2.4 on 2025-10-21 19:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CharityClassificationCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "classification_type",
                    models.CharField(
                        choices=[
                            ("Charity Classification", "Charity Classification"),
                            ("Charitable Purpose", "Charitable Purpose"),
                            ("Report Activity", "Report Activity"),
                            ("Beneficiaries", "Beneficiaries"),
                            ("Operates In", "Operates In"),
                        ],
                        max_length=255,
                        verbose_name="Classification type",
                    ),
                ),
                (
                    "classification_en",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Classification",
                    ),
                ),
                (
                    "classification_ga",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Classification",
                    ),
                ),
            ],
            options={
                "verbose_name": "Charity classification",
                "verbose_name_plural": "Charity classifications",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("classification_type", "classification_en"),
                        name="unique_classification_type_en",
                    ),
                    models.UniqueConstraint(
                        fields=("classification_type", "classification_ga"),
                        name="unique_classification_type_ga",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Charity",
            fields=[
                (
                    "registered_charity_number",
                    models.IntegerField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="Registered Charity Number",
                    ),
                ),
                (
                    "registered_charity_name",
                    models.CharField(
                        db_index=True,
                        max_length=255,
                        verbose_name="Registered Charity Name",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Registered", "Registered"),
                            ("Deregistered", "Deregistered"),
                            ("Deregistered S40 by Revenue", "Deregistered S40"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "primary_address",
                    models.TextField(
                        blank=True, null=True, verbose_name="Primary Address"
                    ),
                ),
                (
                    "governing_form",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Association", "Association"),
                            (
                                "Board Of Management (Post-Primary School)",
                                "Board Management Post Primary",
                            ),
                            (
                                "Board of Management (Primary School)",
                                "Board Management Primary",
                            ),
                            ("CLG - Company Limited by Guarantee", "Clg"),
                            (
                                "CLG - Company Limited by Guarantee (licenced company)",
                                "Clg Licenced",
                            ),
                            ("Co-operative", "Co Operative"),
                            ("Company", "Company"),
                            (
                                "DAC - Designated Activity Company (limited by shares)",
                                "Dac Shares",
                            ),
                            (
                                "DAC - Designated Activity Company (guarantee licence company)",
                                "Dac Guarantee Licence",
                            ),
                            (
                                "DAC - Designated Activity Company Limited by Shares (licenced company)",
                                "Dac Licenced",
                            ),
                            ("Designated Activity Company", "Dac"),
                            (
                                "Education Body (as defined in the Charities Act 2009)",
                                "Education Body",
                            ),
                            ("Educational Endowment Scheme", "Educational Endowment"),
                            ("Foreign Registered Company", "Foreign Registered"),
                            ("Friendly Society", "Friendly Society"),
                            ("High Court Scheme", "High Court Scheme"),
                            ("LTD - Private Company Limited by Shares", "Ltd"),
                            ("Other", "Other"),
                            ("Other Trust", "Other Trust"),
                            ("Private Charitable Trust", "Private Charitable Trust"),
                            ("Private Unlimited Company", "Private Unlimited Company"),
                            ("Public limited company", "Public Limited Company"),
                            (
                                "PULC - Public Unlimited Company without share capital",
                                "Pulc",
                            ),
                            ("Royal Charter Governance", "Royal Charter"),
                            ("Statute / Statutory Instrument", "Statute"),
                            ("Trust", "Trust"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="Governing Form",
                    ),
                ),
                (
                    "cro_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Company Number",
                    ),
                ),
                (
                    "country_established",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Country Established",
                    ),
                ),
                (
                    "charitable_objects",
                    models.TextField(
                        blank=True, null=True, verbose_name="Charitable Objects"
                    ),
                ),
                (
                    "charitable_objects_ga",
                    models.TextField(
                        blank=True, null=True, verbose_name="Charitable Objects (Irish)"
                    ),
                ),
                (
                    "latest_financial_year_end",
                    models.DateField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="Latest Financial Year End",
                    ),
                ),
                (
                    "latest_income",
                    models.IntegerField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="Latest Income",
                    ),
                ),
                (
                    "latest_expenditure",
                    models.IntegerField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name="Latest Expenditure",
                    ),
                ),
                (
                    "latest_activity_description",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Latest Activity Description",
                    ),
                ),
                (
                    "latest_activity_description_ga",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Latest Activity Description (Irish)",
                    ),
                ),
                (
                    "classifications",
                    models.ManyToManyField(
                        blank=True,
                        db_constraint=False,
                        related_name="charities",
                        to="crie.charityclassificationcategory",
                        verbose_name="Classifications",
                    ),
                ),
            ],
            options={
                "verbose_name": "Charity in Ireland",
                "verbose_name_plural": "Charities in Ireland",
            },
        ),
        migrations.CreateModel(
            name="CharityName",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="en", max_length=10, verbose_name="Language"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "charity",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="names",
                        to="crie.charity",
                        verbose_name="Charity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CharityFinancialYear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "period_start_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Period Start Date"
                    ),
                ),
                (
                    "period_end_date",
                    models.DateField(db_index=True, verbose_name="Period End Date"),
                ),
                (
                    "activity_description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Activity Description"
                    ),
                ),
                (
                    "activity_description_ga",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Activity Description (Irish)",
                    ),
                ),
                (
                    "income_government_or_local_authorities",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Income: Government or Local Authorities",
                    ),
                ),
                (
                    "income_other_public_bodies",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Income: Other Public Bodies",
                    ),
                ),
                (
                    "income_philantrophic_organisations",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Income: Philantrophic Organisations",
                    ),
                ),
                (
                    "income_donations",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Income: Donations"
                    ),
                ),
                (
                    "income_trading_and_commercial_activities",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Income: Trading and Commercial Activities",
                    ),
                ),
                (
                    "income_other_sources",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Income: Other Sources"
                    ),
                ),
                (
                    "income_bequests",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Income: Bequests"
                    ),
                ),
                (
                    "gross_income",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Gross Income"
                    ),
                ),
                (
                    "gross_expenditure",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Gross Expenditure"
                    ),
                ),
                (
                    "surplus_deficit_for_the_period",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Surplus / (Deficit) for the Period",
                    ),
                ),
                (
                    "cash_at_hand_and_in_bank",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Cash at Hand and in Bank"
                    ),
                ),
                (
                    "other_assets",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Other Assets"
                    ),
                ),
                (
                    "total_assets",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Total Assets"
                    ),
                ),
                (
                    "total_liabilities",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Total Liabilities"
                    ),
                ),
                (
                    "net_assets_liabilities",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Net Assets / (Liabilities)"
                    ),
                ),
                (
                    "gross_income_schools",
                    models.CharField(
                        blank=True,
                        choices=[
                            (1, "< €250k"),
                            (2, "€250k - €500k"),
                            (3, "€501k - €2m"),
                            (4, "> €2m"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="Gross Income (Schools)",
                    ),
                ),
                (
                    "gross_expenditure_schools",
                    models.CharField(
                        blank=True,
                        choices=[
                            (1, "< €250k"),
                            (2, "€250k - €500k"),
                            (3, "€501k - €2m"),
                            (4, "> €2m"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="Gross Expenditure (Schools)",
                    ),
                ),
                (
                    "number_of_employees",
                    models.CharField(
                        blank=True,
                        choices=[
                            (0, "None"),
                            (1, "1-9"),
                            (2, "10-19"),
                            (3, "20-49"),
                            (4, "50-249"),
                            (5, "250+"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="Number of Employees",
                    ),
                ),
                (
                    "number_of_full_time_employees",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Number of Full-Time Employees",
                    ),
                ),
                (
                    "number_of_part_time_employees",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Number of Part-Time Employees",
                    ),
                ),
                (
                    "number_of_volunteers",
                    models.CharField(
                        blank=True,
                        choices=[
                            (0, "None"),
                            (1, "1-9"),
                            (2, "10-19"),
                            (3, "20-49"),
                            (4, "50-249"),
                            (5, "250-499"),
                            (6, "500-999"),
                            (7, "1000-4999"),
                            (8, "5000+"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="Number of Volunteers",
                    ),
                ),
                (
                    "charity",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="financial_years",
                        to="crie.charity",
                        verbose_name="Charity",
                    ),
                ),
                (
                    "classifications",
                    models.ManyToManyField(
                        blank=True,
                        db_constraint=False,
                        related_name="charity_financial_years",
                        to="crie.charityclassificationcategory",
                        verbose_name="Classifications",
                    ),
                ),
            ],
            options={
                "verbose_name": "Charity Financial Year",
                "verbose_name_plural": "Charity Financial Years",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("charity", "period_end_date"),
                        name="unique_charity_financial_year",
                    )
                ],
            },
        ),
    ]
